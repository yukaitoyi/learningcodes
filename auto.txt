#include <iostream>
#include<string>
#include<vector>
#include<unordered_map>

std::string GetName() {
    
    return "auto";
}

class Device {

};

class DeviceManager {
private:
    std::unordered_map<std::string, std::vector<Device*>> m_Devices;
public:
    const std::unordered_map<std::string, std::vector<Device*>>& GetDevices() const{
        return m_Devices;
    }
};

int main() {
    std::vector<std::string> strings;
    strings.push_back("Apple");
    strings.push_back("Orange");

    for (auto it = strings.begin(); it != strings.end(); it++) {
        std::cout << *it << std::endl;
    }
    //auto = std::vector<std::strings>::iterator

    DeviceManager dm;
    //const std::unordered_map<std::string, std::vector<Device*>>& divices = dm.GetDevices();
    const auto& divices = dm.GetDevices();
    std::cin.get();
}